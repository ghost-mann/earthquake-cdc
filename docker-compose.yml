# Note: The top-level 'version' attribute is obsolete in modern Docker Compose and has been removed.

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: earthquake_zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: earthquake_kafka
    restart: always
    ports:
      # Port for external connections from your host machine (e.g., Python script, admin tools)
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # Advertised listeners tell clients how to connect.
      # PLAINTEXT is for internal connections within the Docker network (e.g., from Kafka Connect).
      # PLAINTEXT_HOST is for external connections from your host machine.
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  mariadb:
    image: mariadb:10.11
    container_name: earthquake_mariadb
    restart: always
    ports:
      - "3306:3306"
    # Command arguments enable binary logging, which is required for Debezium CDC.
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
      - '--server-id=100'
      - '--binlog-format=ROW'
      - '--log-bin=mariadb-bin'
      - '--binlog-do-db=earthquake'
    environment:
      MARIADB_ROOT_PASSWORD: password
      MARIADB_DATABASE: earthquake
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:15
    container_name: earthquake_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: earthquake_sink
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d earthquake_sink"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  kafka-connect:
    build:
      context: ./kafka-connect
    image: earthquake_kafka-connect
    container_name: earthquake_kafka-connect
    restart: always
    ports:
      - "8083:8083" # Kafka Connect REST API
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mariadb:
        condition: service_healthy
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_GROUP_ID: "earthquake-cdc"

      # REST API Configuration
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_REST_PORT: 8083
      CONNECT_LISTENERS: "http://0.0.0.0:8083"

      # Topics for Connect to store its configuration, offsets, and status.
      CONNECT_CONFIG_STORAGE_TOPIC: "earthquake-cdc-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "earthquake-cdc-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "earthquake-cdc-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

      # Offset flush settings
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000

      # Default converters
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"

      # Internal converters (required)
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

      # Plugin path
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

      # Logging
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: '[%d] %p %X{connector.context}%m (%c:%L)%n'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/connectors"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s